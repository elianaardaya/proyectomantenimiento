//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
namespace dbMantenimientoBiz
{
	/// <summary>
	/// Main entry point into the database.
	/// 'Get' calls fetch data using the QueryCriteria object.
	/// 'New' calls create new objects/rows.
	/// The CommitAll() function will need to be called at the end.
	/// </summary>
	/// <example>
	/// Example of retrieving a contact and some of it's child rows from the database.
	/// <code>
	/// DataManager dm = new DataManager(Config.Dsn);
	/// dm.QueryCriteria.And(JoinPath.Contact.Teacher.Schedule.Columns.Duration,30,MatchType.GreaterOrEqual);
	/// Contact c = dm.GetContact(FetchPath.Contact.Teacher.All);
	/// </code>
	/// Example of an insert
	/// <code>
	/// DataManager dm = new DataManager(Config.Dsn);
	/// Contact c = dm.NewContact();
	/// dm.CommitAll();
	/// </code>
	/// Example of fetching a collection of rows
	/// <code>
	/// DataManager dm = new DataManager(Config.Dsn);
	/// ContactCollection c = dm.GetContactCollection(FetchPath.Contact.Teacher.All);
	/// </code>
	/// </example>
	public class DataManager : OrmLib.DataManagerBase
	{
		/// <summary>
		/// Constructor for dsn.
		/// </summary>
		public DataManager(string dsn) : base(dsn, dbMantenimientoBiz.OrmDataSet.NewDataSet()){}

		/// <summary>
		/// Constructor for connections.
		/// </summary>
		public DataManager(System.Data.SqlClient.SqlConnection connection) : base(connection, dbMantenimientoBiz.OrmDataSet.NewDataSet()){}
		
		/// <summary>
		/// Constructor for transactions.
		/// </summary>
		public DataManager(System.Data.SqlClient.SqlTransaction transaction) : base(transaction, dbMantenimientoBiz.OrmDataSet.NewDataSet()){}
		
		/// <summary>
		/// Lookup object for static tables
		/// </summary>
		/// <remarks>
		/// This is an internal field and should not be used.
		/// </remarks>
		internal dbMantenimientoBiz.Lookups lookups;
		
		/// <summary>
		/// Fetches the lookup object
		/// TODO: refresh the lookup object
		/// </summary>
		/// <remarks>
		/// This is an internal method and should not be used.
		/// </remarks>
		/// <returns></returns>
		internal dbMantenimientoBiz.Lookups GetLookups()
		{
			if (lookups == null)
			{
				lookups = new dbMantenimientoBiz.Lookups(this.Dsn);
			}
			return lookups;
		}


		/// <summary>
		/// Creates a new aprobacion.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new aprobacion object</returns>
		public dbMantenimientoBiz.aprobacion Newaprobacion(System.Int32 id,
			System.Data.SqlTypes.SqlInt32 idMantenimiento,
			System.Data.SqlTypes.SqlInt32 idusuario,
			dbMantenimientoBiz.solicitud parentsolicitud,
			dbMantenimientoBiz.Usuario parentUsuario)
		{
			System.Data.DataRow dr = DataSet.Tables["aprobacion"].NewRow();
			DataSet.Tables["aprobacion"].Rows.Add( dr );
			dbMantenimientoBiz.aprobacion _aprobacion = new dbMantenimientoBiz.aprobacion(this, dr);
			
			_aprobacion.id = id;
			_aprobacion.idMantenimiento = idMantenimiento;
			_aprobacion.idusuario = idusuario;
			_aprobacion.solicitud = parentsolicitud;
			_aprobacion.Usuario = parentUsuario;
						
			return _aprobacion;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.aprobacion based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A aprobacion, or null if not found</returns>
		public dbMantenimientoBiz.aprobacion  Getaprobacion(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("aprobacion", relations), ds, false);

			System.Data.DataRow aprobacionRow = GetRow(ds, "aprobacion");

			if ( aprobacionRow == null ) return null;
			return new dbMantenimientoBiz.aprobacion (this,  aprobacionRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.aprobacion from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["aprobacionid"] = _aprobacion.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _aprobacion = dm.GetContactFromDataSet((System.Int32)Session["aprobacionid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A aprobacion, or null if not found</returns>
		public dbMantenimientoBiz.aprobacion GetaprobacionFromDataSet(System.Int32 id)
		{
			System.Data.DataRow aprobacionRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["aprobacion"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					aprobacionRow = dr;
					break;
				}
			}
			
			if ( aprobacionRow == null) return null;
			return new dbMantenimientoBiz.aprobacion (this, aprobacionRow);
		}
		/// <summary>
		/// Gets multiple aprobacions based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of aprobacion objects</returns>
		public dbMantenimientoBiz.aprobacionCollection GetaprobacionCollection()
		{
			return GetaprobacionCollection(FetchPath.aprobacion);
		}
		/// <summary>
		/// Gets multiple aprobacions based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of aprobacion objects</returns>
		public dbMantenimientoBiz.aprobacionCollection GetaprobacionCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("aprobacion", relations), ds, false);
			
			System.Data.DataRow[] aprobacionList = GetRows(ds,"aprobacion");

			if ( aprobacionList == null ) return null;

			dbMantenimientoBiz.aprobacionCollection a = new dbMantenimientoBiz.aprobacionCollection();
			
			foreach ( System.Data.DataRow dr in aprobacionList )
				a.Add(new dbMantenimientoBiz.aprobacion( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of aprobacion from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all aprobacion loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["aprobacionID"] = _aprobacion.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _aprobacion = dm.GetContactFromDataSet((int)Session["aprobacionID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of aprobacion objects.</returns>
		public dbMantenimientoBiz.aprobacionCollection GetaprobacionCollectionFromDataSet()
		{
			System.Data.DataRow[] aprobacionList = GetRows(DataSet, "aprobacion");
			dbMantenimientoBiz.aprobacionCollection a = new dbMantenimientoBiz.aprobacionCollection();
			
			foreach(System.Data.DataRow dr in aprobacionList )
				a.Add( new dbMantenimientoBiz.aprobacion(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new componente.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new componente object</returns>
		public dbMantenimientoBiz.componente Newcomponente(System.String id,
			System.String nombre,
			System.String marca,
			System.Data.SqlTypes.SqlInt32 idproveedor,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["componente"].NewRow();
			DataSet.Tables["componente"].Rows.Add( dr );
			dbMantenimientoBiz.componente _componente = new dbMantenimientoBiz.componente(this, dr);
			
			_componente.id = id;
			_componente.nombre = nombre;
			_componente.marca = marca;
			_componente.idproveedor = idproveedor;
			_componente.estado = estado;
						
			return _componente;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.componente based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A componente, or null if not found</returns>
		public dbMantenimientoBiz.componente  Getcomponente(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("componente", relations), ds, false);

			System.Data.DataRow componenteRow = GetRow(ds, "componente");

			if ( componenteRow == null ) return null;
			return new dbMantenimientoBiz.componente (this,  componenteRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.componente from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["componenteid"] = _componente.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _componente = dm.GetContactFromDataSet((System.String)Session["componenteid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A componente, or null if not found</returns>
		public dbMantenimientoBiz.componente GetcomponenteFromDataSet(System.String id)
		{
			System.Data.DataRow componenteRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["componente"].Rows)
			{
				if ( ((System.String)dr["id"]).ToString() == id.ToString() ) 
				{
					componenteRow = dr;
					break;
				}
			}
			
			if ( componenteRow == null) return null;
			return new dbMantenimientoBiz.componente (this, componenteRow);
		}
		/// <summary>
		/// Gets multiple componentes based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of componente objects</returns>
		public dbMantenimientoBiz.componenteCollection GetcomponenteCollection()
		{
			return GetcomponenteCollection(FetchPath.componente);
		}
		/// <summary>
		/// Gets multiple componentes based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of componente objects</returns>
		public dbMantenimientoBiz.componenteCollection GetcomponenteCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("componente", relations), ds, false);
			
			System.Data.DataRow[] componenteList = GetRows(ds,"componente");

			if ( componenteList == null ) return null;

			dbMantenimientoBiz.componenteCollection a = new dbMantenimientoBiz.componenteCollection();
			
			foreach ( System.Data.DataRow dr in componenteList )
				a.Add(new dbMantenimientoBiz.componente( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of componente from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all componente loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["componenteID"] = _componente.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _componente = dm.GetContactFromDataSet((int)Session["componenteID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of componente objects.</returns>
		public dbMantenimientoBiz.componenteCollection GetcomponenteCollectionFromDataSet()
		{
			System.Data.DataRow[] componenteList = GetRows(DataSet, "componente");
			dbMantenimientoBiz.componenteCollection a = new dbMantenimientoBiz.componenteCollection();
			
			foreach(System.Data.DataRow dr in componenteList )
				a.Add( new dbMantenimientoBiz.componente(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new detalle_reparo.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new detalle_reparo object</returns>
		public dbMantenimientoBiz.detalle_reparo Newdetalle_reparo(System.String idmaquina,
			System.Data.SqlTypes.SqlDateTime fecha,
			System.Int32 id,
			System.Data.SqlTypes.SqlInt32 idusuario,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["detalle_reparo"].NewRow();
			DataSet.Tables["detalle_reparo"].Rows.Add( dr );
			dbMantenimientoBiz.detalle_reparo _detalle_reparo = new dbMantenimientoBiz.detalle_reparo(this, dr);
			
			_detalle_reparo.idmaquina = idmaquina;
			_detalle_reparo.fecha = fecha;
			_detalle_reparo.id = id;
			_detalle_reparo.idusuario = idusuario;
			_detalle_reparo.estado = estado;
						
			return _detalle_reparo;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.detalle_reparo based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A detalle_reparo, or null if not found</returns>
		public dbMantenimientoBiz.detalle_reparo  Getdetalle_reparo(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("detalle_reparo", relations), ds, false);

			System.Data.DataRow detalle_reparoRow = GetRow(ds, "detalle_reparo");

			if ( detalle_reparoRow == null ) return null;
			return new dbMantenimientoBiz.detalle_reparo (this,  detalle_reparoRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.detalle_reparo from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["detalle_reparoid"] = _detalle_reparo.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _detalle_reparo = dm.GetContactFromDataSet((System.Int32)Session["detalle_reparoid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A detalle_reparo, or null if not found</returns>
		public dbMantenimientoBiz.detalle_reparo Getdetalle_reparoFromDataSet(System.Int32 id)
		{
			System.Data.DataRow detalle_reparoRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["detalle_reparo"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					detalle_reparoRow = dr;
					break;
				}
			}
			
			if ( detalle_reparoRow == null) return null;
			return new dbMantenimientoBiz.detalle_reparo (this, detalle_reparoRow);
		}
		/// <summary>
		/// Gets multiple detalle_reparos based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of detalle_reparo objects</returns>
		public dbMantenimientoBiz.detalle_reparoCollection Getdetalle_reparoCollection()
		{
			return Getdetalle_reparoCollection(FetchPath.detalle_reparo);
		}
		/// <summary>
		/// Gets multiple detalle_reparos based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of detalle_reparo objects</returns>
		public dbMantenimientoBiz.detalle_reparoCollection Getdetalle_reparoCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("detalle_reparo", relations), ds, false);
			
			System.Data.DataRow[] detalle_reparoList = GetRows(ds,"detalle_reparo");

			if ( detalle_reparoList == null ) return null;

			dbMantenimientoBiz.detalle_reparoCollection a = new dbMantenimientoBiz.detalle_reparoCollection();
			
			foreach ( System.Data.DataRow dr in detalle_reparoList )
				a.Add(new dbMantenimientoBiz.detalle_reparo( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of detalle_reparo from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all detalle_reparo loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["detalle_reparoID"] = _detalle_reparo.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _detalle_reparo = dm.GetContactFromDataSet((int)Session["detalle_reparoID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of detalle_reparo objects.</returns>
		public dbMantenimientoBiz.detalle_reparoCollection Getdetalle_reparoCollectionFromDataSet()
		{
			System.Data.DataRow[] detalle_reparoList = GetRows(DataSet, "detalle_reparo");
			dbMantenimientoBiz.detalle_reparoCollection a = new dbMantenimientoBiz.detalle_reparoCollection();
			
			foreach(System.Data.DataRow dr in detalle_reparoList )
				a.Add( new dbMantenimientoBiz.detalle_reparo(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new detalleComponente.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new detalleComponente object</returns>
		public dbMantenimientoBiz.detalleComponente NewdetalleComponente(System.String id_componente,
			System.Data.SqlTypes.SqlInt32 id_reparo,
			System.Data.SqlTypes.SqlInt32 cantidad,
			System.Data.SqlTypes.SqlDouble monto,
			System.Int32 id,
			dbMantenimientoBiz.componente parentcomponente,
			dbMantenimientoBiz.detalle_reparo parentdetalle_reparo)
		{
			System.Data.DataRow dr = DataSet.Tables["detalleComponente"].NewRow();
			DataSet.Tables["detalleComponente"].Rows.Add( dr );
			dbMantenimientoBiz.detalleComponente _detalleComponente = new dbMantenimientoBiz.detalleComponente(this, dr);
			
			_detalleComponente.id_componente = id_componente;
			_detalleComponente.id_reparo = id_reparo;
			_detalleComponente.cantidad = cantidad;
			_detalleComponente.monto = monto;
			_detalleComponente.id = id;
			_detalleComponente.componente = parentcomponente;
			_detalleComponente.detalle_reparo = parentdetalle_reparo;
						
			return _detalleComponente;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.detalleComponente based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A detalleComponente, or null if not found</returns>
		public dbMantenimientoBiz.detalleComponente  GetdetalleComponente(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("detalleComponente", relations), ds, false);

			System.Data.DataRow detalleComponenteRow = GetRow(ds, "detalleComponente");

			if ( detalleComponenteRow == null ) return null;
			return new dbMantenimientoBiz.detalleComponente (this,  detalleComponenteRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.detalleComponente from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["detalleComponenteid"] = _detalleComponente.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _detalleComponente = dm.GetContactFromDataSet((System.Int32)Session["detalleComponenteid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A detalleComponente, or null if not found</returns>
		public dbMantenimientoBiz.detalleComponente GetdetalleComponenteFromDataSet(System.Int32 id)
		{
			System.Data.DataRow detalleComponenteRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["detalleComponente"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					detalleComponenteRow = dr;
					break;
				}
			}
			
			if ( detalleComponenteRow == null) return null;
			return new dbMantenimientoBiz.detalleComponente (this, detalleComponenteRow);
		}
		/// <summary>
		/// Gets multiple detalleComponentes based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of detalleComponente objects</returns>
		public dbMantenimientoBiz.detalleComponenteCollection GetdetalleComponenteCollection()
		{
			return GetdetalleComponenteCollection(FetchPath.detalleComponente);
		}
		/// <summary>
		/// Gets multiple detalleComponentes based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of detalleComponente objects</returns>
		public dbMantenimientoBiz.detalleComponenteCollection GetdetalleComponenteCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("detalleComponente", relations), ds, false);
			
			System.Data.DataRow[] detalleComponenteList = GetRows(ds,"detalleComponente");

			if ( detalleComponenteList == null ) return null;

			dbMantenimientoBiz.detalleComponenteCollection a = new dbMantenimientoBiz.detalleComponenteCollection();
			
			foreach ( System.Data.DataRow dr in detalleComponenteList )
				a.Add(new dbMantenimientoBiz.detalleComponente( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of detalleComponente from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all detalleComponente loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["detalleComponenteID"] = _detalleComponente.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _detalleComponente = dm.GetContactFromDataSet((int)Session["detalleComponenteID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of detalleComponente objects.</returns>
		public dbMantenimientoBiz.detalleComponenteCollection GetdetalleComponenteCollectionFromDataSet()
		{
			System.Data.DataRow[] detalleComponenteList = GetRows(DataSet, "detalleComponente");
			dbMantenimientoBiz.detalleComponenteCollection a = new dbMantenimientoBiz.detalleComponenteCollection();
			
			foreach(System.Data.DataRow dr in detalleComponenteList )
				a.Add( new dbMantenimientoBiz.detalleComponente(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new empresa.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new empresa object</returns>
		public dbMantenimientoBiz.empresa Newempresa(System.Int32 id,
			System.String nombre,
			System.String rubro,
			System.String direccion,
			System.String telefono,
			System.Data.SqlTypes.SqlBinary imagen)
		{
			System.Data.DataRow dr = DataSet.Tables["empresa"].NewRow();
			DataSet.Tables["empresa"].Rows.Add( dr );
			dbMantenimientoBiz.empresa _empresa = new dbMantenimientoBiz.empresa(this, dr);
			
			_empresa.id = id;
			_empresa.nombre = nombre;
			_empresa.rubro = rubro;
			_empresa.direccion = direccion;
			_empresa.telefono = telefono;
			_empresa.imagen = imagen;
						
			return _empresa;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.empresa based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A empresa, or null if not found</returns>
		public dbMantenimientoBiz.empresa  Getempresa(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("empresa", relations), ds, false);

			System.Data.DataRow empresaRow = GetRow(ds, "empresa");

			if ( empresaRow == null ) return null;
			return new dbMantenimientoBiz.empresa (this,  empresaRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.empresa from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["empresaid"] = _empresa.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _empresa = dm.GetContactFromDataSet((System.Int32)Session["empresaid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A empresa, or null if not found</returns>
		public dbMantenimientoBiz.empresa GetempresaFromDataSet(System.Int32 id)
		{
			System.Data.DataRow empresaRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["empresa"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					empresaRow = dr;
					break;
				}
			}
			
			if ( empresaRow == null) return null;
			return new dbMantenimientoBiz.empresa (this, empresaRow);
		}
		/// <summary>
		/// Gets multiple empresas based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of empresa objects</returns>
		public dbMantenimientoBiz.empresaCollection GetempresaCollection()
		{
			return GetempresaCollection(FetchPath.empresa);
		}
		/// <summary>
		/// Gets multiple empresas based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of empresa objects</returns>
		public dbMantenimientoBiz.empresaCollection GetempresaCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("empresa", relations), ds, false);
			
			System.Data.DataRow[] empresaList = GetRows(ds,"empresa");

			if ( empresaList == null ) return null;

			dbMantenimientoBiz.empresaCollection a = new dbMantenimientoBiz.empresaCollection();
			
			foreach ( System.Data.DataRow dr in empresaList )
				a.Add(new dbMantenimientoBiz.empresa( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of empresa from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all empresa loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["empresaID"] = _empresa.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _empresa = dm.GetContactFromDataSet((int)Session["empresaID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of empresa objects.</returns>
		public dbMantenimientoBiz.empresaCollection GetempresaCollectionFromDataSet()
		{
			System.Data.DataRow[] empresaList = GetRows(DataSet, "empresa");
			dbMantenimientoBiz.empresaCollection a = new dbMantenimientoBiz.empresaCollection();
			
			foreach(System.Data.DataRow dr in empresaList )
				a.Add( new dbMantenimientoBiz.empresa(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new funcion.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new funcion object</returns>
		public dbMantenimientoBiz.funcion Newfuncion(System.Int32 id,
			System.String nombre)
		{
			System.Data.DataRow dr = DataSet.Tables["funcion"].NewRow();
			DataSet.Tables["funcion"].Rows.Add( dr );
			dbMantenimientoBiz.funcion _funcion = new dbMantenimientoBiz.funcion(this, dr);
			
			_funcion.id = id;
			_funcion.nombre = nombre;
						
			return _funcion;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.funcion based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A funcion, or null if not found</returns>
		public dbMantenimientoBiz.funcion  Getfuncion(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("funcion", relations), ds, false);

			System.Data.DataRow funcionRow = GetRow(ds, "funcion");

			if ( funcionRow == null ) return null;
			return new dbMantenimientoBiz.funcion (this,  funcionRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.funcion from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["funcionid"] = _funcion.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _funcion = dm.GetContactFromDataSet((System.Int32)Session["funcionid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A funcion, or null if not found</returns>
		public dbMantenimientoBiz.funcion GetfuncionFromDataSet(System.Int32 id)
		{
			System.Data.DataRow funcionRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["funcion"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					funcionRow = dr;
					break;
				}
			}
			
			if ( funcionRow == null) return null;
			return new dbMantenimientoBiz.funcion (this, funcionRow);
		}
		/// <summary>
		/// Gets multiple funcions based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of funcion objects</returns>
		public dbMantenimientoBiz.funcionCollection GetfuncionCollection()
		{
			return GetfuncionCollection(FetchPath.funcion);
		}
		/// <summary>
		/// Gets multiple funcions based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of funcion objects</returns>
		public dbMantenimientoBiz.funcionCollection GetfuncionCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("funcion", relations), ds, false);
			
			System.Data.DataRow[] funcionList = GetRows(ds,"funcion");

			if ( funcionList == null ) return null;

			dbMantenimientoBiz.funcionCollection a = new dbMantenimientoBiz.funcionCollection();
			
			foreach ( System.Data.DataRow dr in funcionList )
				a.Add(new dbMantenimientoBiz.funcion( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of funcion from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all funcion loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["funcionID"] = _funcion.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _funcion = dm.GetContactFromDataSet((int)Session["funcionID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of funcion objects.</returns>
		public dbMantenimientoBiz.funcionCollection GetfuncionCollectionFromDataSet()
		{
			System.Data.DataRow[] funcionList = GetRows(DataSet, "funcion");
			dbMantenimientoBiz.funcionCollection a = new dbMantenimientoBiz.funcionCollection();
			
			foreach(System.Data.DataRow dr in funcionList )
				a.Add( new dbMantenimientoBiz.funcion(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new inventario.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new inventario object</returns>
		public dbMantenimientoBiz.inventario Newinventario(System.Int32 id,
			System.Data.SqlTypes.SqlInt32 idmaterial,
			System.Data.SqlTypes.SqlInt32 cantidad,
			dbMantenimientoBiz.material_herramienta parentmaterial_herramienta)
		{
			System.Data.DataRow dr = DataSet.Tables["inventario"].NewRow();
			DataSet.Tables["inventario"].Rows.Add( dr );
			dbMantenimientoBiz.inventario _inventario = new dbMantenimientoBiz.inventario(this, dr);
			
			_inventario.id = id;
			_inventario.idmaterial = idmaterial;
			_inventario.cantidad = cantidad;
			_inventario.material_herramienta = parentmaterial_herramienta;
						
			return _inventario;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.inventario based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A inventario, or null if not found</returns>
		public dbMantenimientoBiz.inventario  Getinventario(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("inventario", relations), ds, false);

			System.Data.DataRow inventarioRow = GetRow(ds, "inventario");

			if ( inventarioRow == null ) return null;
			return new dbMantenimientoBiz.inventario (this,  inventarioRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.inventario from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["inventarioid"] = _inventario.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _inventario = dm.GetContactFromDataSet((System.Int32)Session["inventarioid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A inventario, or null if not found</returns>
		public dbMantenimientoBiz.inventario GetinventarioFromDataSet(System.Int32 id)
		{
			System.Data.DataRow inventarioRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["inventario"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					inventarioRow = dr;
					break;
				}
			}
			
			if ( inventarioRow == null) return null;
			return new dbMantenimientoBiz.inventario (this, inventarioRow);
		}
		/// <summary>
		/// Gets multiple inventarios based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of inventario objects</returns>
		public dbMantenimientoBiz.inventarioCollection GetinventarioCollection()
		{
			return GetinventarioCollection(FetchPath.inventario);
		}
		/// <summary>
		/// Gets multiple inventarios based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of inventario objects</returns>
		public dbMantenimientoBiz.inventarioCollection GetinventarioCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("inventario", relations), ds, false);
			
			System.Data.DataRow[] inventarioList = GetRows(ds,"inventario");

			if ( inventarioList == null ) return null;

			dbMantenimientoBiz.inventarioCollection a = new dbMantenimientoBiz.inventarioCollection();
			
			foreach ( System.Data.DataRow dr in inventarioList )
				a.Add(new dbMantenimientoBiz.inventario( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of inventario from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all inventario loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["inventarioID"] = _inventario.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _inventario = dm.GetContactFromDataSet((int)Session["inventarioID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of inventario objects.</returns>
		public dbMantenimientoBiz.inventarioCollection GetinventarioCollectionFromDataSet()
		{
			System.Data.DataRow[] inventarioList = GetRows(DataSet, "inventario");
			dbMantenimientoBiz.inventarioCollection a = new dbMantenimientoBiz.inventarioCollection();
			
			foreach(System.Data.DataRow dr in inventarioList )
				a.Add( new dbMantenimientoBiz.inventario(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new linea_produccion.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new linea_produccion object</returns>
		public dbMantenimientoBiz.linea_produccion Newlinea_produccion(System.Int32 id,
			System.String nombre,
			System.String descripcion,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["linea_produccion"].NewRow();
			DataSet.Tables["linea_produccion"].Rows.Add( dr );
			dbMantenimientoBiz.linea_produccion _linea_produccion = new dbMantenimientoBiz.linea_produccion(this, dr);
			
			_linea_produccion.id = id;
			_linea_produccion.nombre = nombre;
			_linea_produccion.descripcion = descripcion;
			_linea_produccion.estado = estado;
						
			return _linea_produccion;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.linea_produccion based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A linea_produccion, or null if not found</returns>
		public dbMantenimientoBiz.linea_produccion  Getlinea_produccion(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("linea_produccion", relations), ds, false);

			System.Data.DataRow linea_produccionRow = GetRow(ds, "linea_produccion");

			if ( linea_produccionRow == null ) return null;
			return new dbMantenimientoBiz.linea_produccion (this,  linea_produccionRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.linea_produccion from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["linea_produccionid"] = _linea_produccion.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _linea_produccion = dm.GetContactFromDataSet((System.Int32)Session["linea_produccionid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A linea_produccion, or null if not found</returns>
		public dbMantenimientoBiz.linea_produccion Getlinea_produccionFromDataSet(System.Int32 id)
		{
			System.Data.DataRow linea_produccionRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["linea_produccion"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					linea_produccionRow = dr;
					break;
				}
			}
			
			if ( linea_produccionRow == null) return null;
			return new dbMantenimientoBiz.linea_produccion (this, linea_produccionRow);
		}
		/// <summary>
		/// Gets multiple linea_produccions based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of linea_produccion objects</returns>
		public dbMantenimientoBiz.linea_produccionCollection Getlinea_produccionCollection()
		{
			return Getlinea_produccionCollection(FetchPath.linea_produccion);
		}
		/// <summary>
		/// Gets multiple linea_produccions based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of linea_produccion objects</returns>
		public dbMantenimientoBiz.linea_produccionCollection Getlinea_produccionCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("linea_produccion", relations), ds, false);
			
			System.Data.DataRow[] linea_produccionList = GetRows(ds,"linea_produccion");

			if ( linea_produccionList == null ) return null;

			dbMantenimientoBiz.linea_produccionCollection a = new dbMantenimientoBiz.linea_produccionCollection();
			
			foreach ( System.Data.DataRow dr in linea_produccionList )
				a.Add(new dbMantenimientoBiz.linea_produccion( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of linea_produccion from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all linea_produccion loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["linea_produccionID"] = _linea_produccion.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _linea_produccion = dm.GetContactFromDataSet((int)Session["linea_produccionID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of linea_produccion objects.</returns>
		public dbMantenimientoBiz.linea_produccionCollection Getlinea_produccionCollectionFromDataSet()
		{
			System.Data.DataRow[] linea_produccionList = GetRows(DataSet, "linea_produccion");
			dbMantenimientoBiz.linea_produccionCollection a = new dbMantenimientoBiz.linea_produccionCollection();
			
			foreach(System.Data.DataRow dr in linea_produccionList )
				a.Add( new dbMantenimientoBiz.linea_produccion(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new maquina.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new maquina object</returns>
		public dbMantenimientoBiz.maquina Newmaquina(System.String id,
			System.String nombre,
			System.String marca,
			System.Data.SqlTypes.SqlInt32 anho,
			System.String industria,
			System.String funcion,
			System.String caracteristicas,
			System.Data.SqlTypes.SqlInt32 idlinea,
			System.String estado,
			System.Data.SqlTypes.SqlBoolean estado2)
		{
			System.Data.DataRow dr = DataSet.Tables["maquina"].NewRow();
			DataSet.Tables["maquina"].Rows.Add( dr );
			dbMantenimientoBiz.maquina _maquina = new dbMantenimientoBiz.maquina(this, dr);
			
			_maquina.id = id;
			_maquina.nombre = nombre;
			_maquina.marca = marca;
			_maquina.anho = anho;
			_maquina.industria = industria;
			_maquina.funcion = funcion;
			_maquina.caracteristicas = caracteristicas;
			_maquina.idlinea = idlinea;
			_maquina.estado = estado;
			_maquina.estado2 = estado2;
						
			return _maquina;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.maquina based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A maquina, or null if not found</returns>
		public dbMantenimientoBiz.maquina  Getmaquina(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("maquina", relations), ds, false);

			System.Data.DataRow maquinaRow = GetRow(ds, "maquina");

			if ( maquinaRow == null ) return null;
			return new dbMantenimientoBiz.maquina (this,  maquinaRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.maquina from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["maquinaid"] = _maquina.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _maquina = dm.GetContactFromDataSet((System.String)Session["maquinaid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A maquina, or null if not found</returns>
		public dbMantenimientoBiz.maquina GetmaquinaFromDataSet(System.String id)
		{
			System.Data.DataRow maquinaRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["maquina"].Rows)
			{
				if ( ((System.String)dr["id"]).ToString() == id.ToString() ) 
				{
					maquinaRow = dr;
					break;
				}
			}
			
			if ( maquinaRow == null) return null;
			return new dbMantenimientoBiz.maquina (this, maquinaRow);
		}
		/// <summary>
		/// Gets multiple maquinas based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of maquina objects</returns>
		public dbMantenimientoBiz.maquinaCollection GetmaquinaCollection()
		{
			return GetmaquinaCollection(FetchPath.maquina);
		}
		/// <summary>
		/// Gets multiple maquinas based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of maquina objects</returns>
		public dbMantenimientoBiz.maquinaCollection GetmaquinaCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("maquina", relations), ds, false);
			
			System.Data.DataRow[] maquinaList = GetRows(ds,"maquina");

			if ( maquinaList == null ) return null;

			dbMantenimientoBiz.maquinaCollection a = new dbMantenimientoBiz.maquinaCollection();
			
			foreach ( System.Data.DataRow dr in maquinaList )
				a.Add(new dbMantenimientoBiz.maquina( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of maquina from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all maquina loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["maquinaID"] = _maquina.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _maquina = dm.GetContactFromDataSet((int)Session["maquinaID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of maquina objects.</returns>
		public dbMantenimientoBiz.maquinaCollection GetmaquinaCollectionFromDataSet()
		{
			System.Data.DataRow[] maquinaList = GetRows(DataSet, "maquina");
			dbMantenimientoBiz.maquinaCollection a = new dbMantenimientoBiz.maquinaCollection();
			
			foreach(System.Data.DataRow dr in maquinaList )
				a.Add( new dbMantenimientoBiz.maquina(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new material_herramienta.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new material_herramienta object</returns>
		public dbMantenimientoBiz.material_herramienta Newmaterial_herramienta(System.Int32 id,
			System.String nombre,
			System.String marca,
			System.Data.SqlTypes.SqlInt32 idproveedor,
			System.Data.SqlTypes.SqlDouble precio,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["material_herramienta"].NewRow();
			DataSet.Tables["material_herramienta"].Rows.Add( dr );
			dbMantenimientoBiz.material_herramienta _material_herramienta = new dbMantenimientoBiz.material_herramienta(this, dr);
			
			_material_herramienta.id = id;
			_material_herramienta.nombre = nombre;
			_material_herramienta.marca = marca;
			_material_herramienta.idproveedor = idproveedor;
			_material_herramienta.precio = precio;
			_material_herramienta.estado = estado;
						
			return _material_herramienta;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.material_herramienta based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A material_herramienta, or null if not found</returns>
		public dbMantenimientoBiz.material_herramienta  Getmaterial_herramienta(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("material_herramienta", relations), ds, false);

			System.Data.DataRow material_herramientaRow = GetRow(ds, "material_herramienta");

			if ( material_herramientaRow == null ) return null;
			return new dbMantenimientoBiz.material_herramienta (this,  material_herramientaRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.material_herramienta from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["material_herramientaid"] = _material_herramienta.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _material_herramienta = dm.GetContactFromDataSet((System.Int32)Session["material_herramientaid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A material_herramienta, or null if not found</returns>
		public dbMantenimientoBiz.material_herramienta Getmaterial_herramientaFromDataSet(System.Int32 id)
		{
			System.Data.DataRow material_herramientaRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["material_herramienta"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					material_herramientaRow = dr;
					break;
				}
			}
			
			if ( material_herramientaRow == null) return null;
			return new dbMantenimientoBiz.material_herramienta (this, material_herramientaRow);
		}
		/// <summary>
		/// Gets multiple material_herramientas based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of material_herramienta objects</returns>
		public dbMantenimientoBiz.material_herramientaCollection Getmaterial_herramientaCollection()
		{
			return Getmaterial_herramientaCollection(FetchPath.material_herramienta);
		}
		/// <summary>
		/// Gets multiple material_herramientas based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of material_herramienta objects</returns>
		public dbMantenimientoBiz.material_herramientaCollection Getmaterial_herramientaCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("material_herramienta", relations), ds, false);
			
			System.Data.DataRow[] material_herramientaList = GetRows(ds,"material_herramienta");

			if ( material_herramientaList == null ) return null;

			dbMantenimientoBiz.material_herramientaCollection a = new dbMantenimientoBiz.material_herramientaCollection();
			
			foreach ( System.Data.DataRow dr in material_herramientaList )
				a.Add(new dbMantenimientoBiz.material_herramienta( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of material_herramienta from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all material_herramienta loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["material_herramientaID"] = _material_herramienta.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _material_herramienta = dm.GetContactFromDataSet((int)Session["material_herramientaID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of material_herramienta objects.</returns>
		public dbMantenimientoBiz.material_herramientaCollection Getmaterial_herramientaCollectionFromDataSet()
		{
			System.Data.DataRow[] material_herramientaList = GetRows(DataSet, "material_herramienta");
			dbMantenimientoBiz.material_herramientaCollection a = new dbMantenimientoBiz.material_herramientaCollection();
			
			foreach(System.Data.DataRow dr in material_herramientaList )
				a.Add( new dbMantenimientoBiz.material_herramienta(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new materialusado.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new materialusado object</returns>
		public dbMantenimientoBiz.materialusado Newmaterialusado(System.Int32 id,
			System.Data.SqlTypes.SqlInt32 idmaterial,
			System.Data.SqlTypes.SqlInt32 cantidad)
		{
			System.Data.DataRow dr = DataSet.Tables["materialusado"].NewRow();
			DataSet.Tables["materialusado"].Rows.Add( dr );
			dbMantenimientoBiz.materialusado _materialusado = new dbMantenimientoBiz.materialusado(this, dr);
			
			_materialusado.id = id;
			_materialusado.idmaterial = idmaterial;
			_materialusado.cantidad = cantidad;
						
			return _materialusado;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.materialusado based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A materialusado, or null if not found</returns>
		public dbMantenimientoBiz.materialusado  Getmaterialusado(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("materialusado", relations), ds, false);

			System.Data.DataRow materialusadoRow = GetRow(ds, "materialusado");

			if ( materialusadoRow == null ) return null;
			return new dbMantenimientoBiz.materialusado (this,  materialusadoRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.materialusado from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["materialusadoid"] = _materialusado.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _materialusado = dm.GetContactFromDataSet((System.Int32)Session["materialusadoid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A materialusado, or null if not found</returns>
		public dbMantenimientoBiz.materialusado GetmaterialusadoFromDataSet(System.Int32 id)
		{
			System.Data.DataRow materialusadoRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["materialusado"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					materialusadoRow = dr;
					break;
				}
			}
			
			if ( materialusadoRow == null) return null;
			return new dbMantenimientoBiz.materialusado (this, materialusadoRow);
		}
		/// <summary>
		/// Gets multiple materialusados based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of materialusado objects</returns>
		public dbMantenimientoBiz.materialusadoCollection GetmaterialusadoCollection()
		{
			return GetmaterialusadoCollection(FetchPath.materialusado);
		}
		/// <summary>
		/// Gets multiple materialusados based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of materialusado objects</returns>
		public dbMantenimientoBiz.materialusadoCollection GetmaterialusadoCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("materialusado", relations), ds, false);
			
			System.Data.DataRow[] materialusadoList = GetRows(ds,"materialusado");

			if ( materialusadoList == null ) return null;

			dbMantenimientoBiz.materialusadoCollection a = new dbMantenimientoBiz.materialusadoCollection();
			
			foreach ( System.Data.DataRow dr in materialusadoList )
				a.Add(new dbMantenimientoBiz.materialusado( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of materialusado from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all materialusado loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["materialusadoID"] = _materialusado.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _materialusado = dm.GetContactFromDataSet((int)Session["materialusadoID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of materialusado objects.</returns>
		public dbMantenimientoBiz.materialusadoCollection GetmaterialusadoCollectionFromDataSet()
		{
			System.Data.DataRow[] materialusadoList = GetRows(DataSet, "materialusado");
			dbMantenimientoBiz.materialusadoCollection a = new dbMantenimientoBiz.materialusadoCollection();
			
			foreach(System.Data.DataRow dr in materialusadoList )
				a.Add( new dbMantenimientoBiz.materialusado(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new privilegio.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new privilegio object</returns>
		public dbMantenimientoBiz.privilegio Newprivilegio(System.Int32 id,
			System.Data.SqlTypes.SqlInt32 idrol,
			System.Data.SqlTypes.SqlInt32 idfuncion,
			dbMantenimientoBiz.funcion parentfuncion,
			dbMantenimientoBiz.rol parentrol)
		{
			System.Data.DataRow dr = DataSet.Tables["privilegio"].NewRow();
			DataSet.Tables["privilegio"].Rows.Add( dr );
			dbMantenimientoBiz.privilegio _privilegio = new dbMantenimientoBiz.privilegio(this, dr);
			
			_privilegio.id = id;
			_privilegio.idrol = idrol;
			_privilegio.idfuncion = idfuncion;
			_privilegio.funcion = parentfuncion;
			_privilegio.rol = parentrol;
						
			return _privilegio;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.privilegio based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A privilegio, or null if not found</returns>
		public dbMantenimientoBiz.privilegio  Getprivilegio(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("privilegio", relations), ds, false);

			System.Data.DataRow privilegioRow = GetRow(ds, "privilegio");

			if ( privilegioRow == null ) return null;
			return new dbMantenimientoBiz.privilegio (this,  privilegioRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.privilegio from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["privilegioid"] = _privilegio.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _privilegio = dm.GetContactFromDataSet((System.Int32)Session["privilegioid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A privilegio, or null if not found</returns>
		public dbMantenimientoBiz.privilegio GetprivilegioFromDataSet(System.Int32 id)
		{
			System.Data.DataRow privilegioRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["privilegio"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					privilegioRow = dr;
					break;
				}
			}
			
			if ( privilegioRow == null) return null;
			return new dbMantenimientoBiz.privilegio (this, privilegioRow);
		}
		/// <summary>
		/// Gets multiple privilegios based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of privilegio objects</returns>
		public dbMantenimientoBiz.privilegioCollection GetprivilegioCollection()
		{
			return GetprivilegioCollection(FetchPath.privilegio);
		}
		/// <summary>
		/// Gets multiple privilegios based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of privilegio objects</returns>
		public dbMantenimientoBiz.privilegioCollection GetprivilegioCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("privilegio", relations), ds, false);
			
			System.Data.DataRow[] privilegioList = GetRows(ds,"privilegio");

			if ( privilegioList == null ) return null;

			dbMantenimientoBiz.privilegioCollection a = new dbMantenimientoBiz.privilegioCollection();
			
			foreach ( System.Data.DataRow dr in privilegioList )
				a.Add(new dbMantenimientoBiz.privilegio( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of privilegio from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all privilegio loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["privilegioID"] = _privilegio.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _privilegio = dm.GetContactFromDataSet((int)Session["privilegioID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of privilegio objects.</returns>
		public dbMantenimientoBiz.privilegioCollection GetprivilegioCollectionFromDataSet()
		{
			System.Data.DataRow[] privilegioList = GetRows(DataSet, "privilegio");
			dbMantenimientoBiz.privilegioCollection a = new dbMantenimientoBiz.privilegioCollection();
			
			foreach(System.Data.DataRow dr in privilegioList )
				a.Add( new dbMantenimientoBiz.privilegio(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new problema.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new problema object</returns>
		public dbMantenimientoBiz.problema Newproblema(System.Int32 id,
			System.Data.SqlTypes.SqlDateTime fecha,
			System.String idmaquina,
			System.String motivo,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["problema"].NewRow();
			DataSet.Tables["problema"].Rows.Add( dr );
			dbMantenimientoBiz.problema _problema = new dbMantenimientoBiz.problema(this, dr);
			
			_problema.id = id;
			_problema.fecha = fecha;
			_problema.idmaquina = idmaquina;
			_problema.motivo = motivo;
			_problema.estado = estado;
						
			return _problema;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.problema based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A problema, or null if not found</returns>
		public dbMantenimientoBiz.problema  Getproblema(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("problema", relations), ds, false);

			System.Data.DataRow problemaRow = GetRow(ds, "problema");

			if ( problemaRow == null ) return null;
			return new dbMantenimientoBiz.problema (this,  problemaRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.problema from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["problemaid"] = _problema.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _problema = dm.GetContactFromDataSet((System.Int32)Session["problemaid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A problema, or null if not found</returns>
		public dbMantenimientoBiz.problema GetproblemaFromDataSet(System.Int32 id)
		{
			System.Data.DataRow problemaRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["problema"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					problemaRow = dr;
					break;
				}
			}
			
			if ( problemaRow == null) return null;
			return new dbMantenimientoBiz.problema (this, problemaRow);
		}
		/// <summary>
		/// Gets multiple problemas based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of problema objects</returns>
		public dbMantenimientoBiz.problemaCollection GetproblemaCollection()
		{
			return GetproblemaCollection(FetchPath.problema);
		}
		/// <summary>
		/// Gets multiple problemas based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of problema objects</returns>
		public dbMantenimientoBiz.problemaCollection GetproblemaCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("problema", relations), ds, false);
			
			System.Data.DataRow[] problemaList = GetRows(ds,"problema");

			if ( problemaList == null ) return null;

			dbMantenimientoBiz.problemaCollection a = new dbMantenimientoBiz.problemaCollection();
			
			foreach ( System.Data.DataRow dr in problemaList )
				a.Add(new dbMantenimientoBiz.problema( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of problema from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all problema loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["problemaID"] = _problema.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _problema = dm.GetContactFromDataSet((int)Session["problemaID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of problema objects.</returns>
		public dbMantenimientoBiz.problemaCollection GetproblemaCollectionFromDataSet()
		{
			System.Data.DataRow[] problemaList = GetRows(DataSet, "problema");
			dbMantenimientoBiz.problemaCollection a = new dbMantenimientoBiz.problemaCollection();
			
			foreach(System.Data.DataRow dr in problemaList )
				a.Add( new dbMantenimientoBiz.problema(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new proveedor.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new proveedor object</returns>
		public dbMantenimientoBiz.proveedor Newproveedor(System.Int32 id,
			System.String empresa,
			System.String contacto,
			System.String direccion,
			System.String telefono,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["proveedor"].NewRow();
			DataSet.Tables["proveedor"].Rows.Add( dr );
			dbMantenimientoBiz.proveedor _proveedor = new dbMantenimientoBiz.proveedor(this, dr);
			
			_proveedor.id = id;
			_proveedor.empresa = empresa;
			_proveedor.contacto = contacto;
			_proveedor.direccion = direccion;
			_proveedor.telefono = telefono;
			_proveedor.estado = estado;
						
			return _proveedor;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.proveedor based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A proveedor, or null if not found</returns>
		public dbMantenimientoBiz.proveedor  Getproveedor(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("proveedor", relations), ds, false);

			System.Data.DataRow proveedorRow = GetRow(ds, "proveedor");

			if ( proveedorRow == null ) return null;
			return new dbMantenimientoBiz.proveedor (this,  proveedorRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.proveedor from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["proveedorid"] = _proveedor.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _proveedor = dm.GetContactFromDataSet((System.Int32)Session["proveedorid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A proveedor, or null if not found</returns>
		public dbMantenimientoBiz.proveedor GetproveedorFromDataSet(System.Int32 id)
		{
			System.Data.DataRow proveedorRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["proveedor"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					proveedorRow = dr;
					break;
				}
			}
			
			if ( proveedorRow == null) return null;
			return new dbMantenimientoBiz.proveedor (this, proveedorRow);
		}
		/// <summary>
		/// Gets multiple proveedors based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of proveedor objects</returns>
		public dbMantenimientoBiz.proveedorCollection GetproveedorCollection()
		{
			return GetproveedorCollection(FetchPath.proveedor);
		}
		/// <summary>
		/// Gets multiple proveedors based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of proveedor objects</returns>
		public dbMantenimientoBiz.proveedorCollection GetproveedorCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("proveedor", relations), ds, false);
			
			System.Data.DataRow[] proveedorList = GetRows(ds,"proveedor");

			if ( proveedorList == null ) return null;

			dbMantenimientoBiz.proveedorCollection a = new dbMantenimientoBiz.proveedorCollection();
			
			foreach ( System.Data.DataRow dr in proveedorList )
				a.Add(new dbMantenimientoBiz.proveedor( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of proveedor from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all proveedor loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["proveedorID"] = _proveedor.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _proveedor = dm.GetContactFromDataSet((int)Session["proveedorID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of proveedor objects.</returns>
		public dbMantenimientoBiz.proveedorCollection GetproveedorCollectionFromDataSet()
		{
			System.Data.DataRow[] proveedorList = GetRows(DataSet, "proveedor");
			dbMantenimientoBiz.proveedorCollection a = new dbMantenimientoBiz.proveedorCollection();
			
			foreach(System.Data.DataRow dr in proveedorList )
				a.Add( new dbMantenimientoBiz.proveedor(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new recomendacion.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new recomendacion object</returns>
		public dbMantenimientoBiz.recomendacion Newrecomendacion(System.Int32 id,
			System.String idmaquina,
			System.String Propertyrecomendacion,
			System.String tipo,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["recomendacion"].NewRow();
			DataSet.Tables["recomendacion"].Rows.Add( dr );
			dbMantenimientoBiz.recomendacion _recomendacion = new dbMantenimientoBiz.recomendacion(this, dr);
			
			_recomendacion.id = id;
			_recomendacion.idmaquina = idmaquina;
			_recomendacion.Propertyrecomendacion = Propertyrecomendacion;
			_recomendacion.tipo = tipo;
			_recomendacion.estado = estado;
						
			return _recomendacion;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.recomendacion based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A recomendacion, or null if not found</returns>
		public dbMantenimientoBiz.recomendacion  Getrecomendacion(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("recomendacion", relations), ds, false);

			System.Data.DataRow recomendacionRow = GetRow(ds, "recomendacion");

			if ( recomendacionRow == null ) return null;
			return new dbMantenimientoBiz.recomendacion (this,  recomendacionRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.recomendacion from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["recomendacionid"] = _recomendacion.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _recomendacion = dm.GetContactFromDataSet((System.Int32)Session["recomendacionid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A recomendacion, or null if not found</returns>
		public dbMantenimientoBiz.recomendacion GetrecomendacionFromDataSet(System.Int32 id)
		{
			System.Data.DataRow recomendacionRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["recomendacion"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					recomendacionRow = dr;
					break;
				}
			}
			
			if ( recomendacionRow == null) return null;
			return new dbMantenimientoBiz.recomendacion (this, recomendacionRow);
		}
		/// <summary>
		/// Gets multiple recomendacions based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of recomendacion objects</returns>
		public dbMantenimientoBiz.recomendacionCollection GetrecomendacionCollection()
		{
			return GetrecomendacionCollection(FetchPath.recomendacion);
		}
		/// <summary>
		/// Gets multiple recomendacions based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of recomendacion objects</returns>
		public dbMantenimientoBiz.recomendacionCollection GetrecomendacionCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("recomendacion", relations), ds, false);
			
			System.Data.DataRow[] recomendacionList = GetRows(ds,"recomendacion");

			if ( recomendacionList == null ) return null;

			dbMantenimientoBiz.recomendacionCollection a = new dbMantenimientoBiz.recomendacionCollection();
			
			foreach ( System.Data.DataRow dr in recomendacionList )
				a.Add(new dbMantenimientoBiz.recomendacion( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of recomendacion from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all recomendacion loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["recomendacionID"] = _recomendacion.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _recomendacion = dm.GetContactFromDataSet((int)Session["recomendacionID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of recomendacion objects.</returns>
		public dbMantenimientoBiz.recomendacionCollection GetrecomendacionCollectionFromDataSet()
		{
			System.Data.DataRow[] recomendacionList = GetRows(DataSet, "recomendacion");
			dbMantenimientoBiz.recomendacionCollection a = new dbMantenimientoBiz.recomendacionCollection();
			
			foreach(System.Data.DataRow dr in recomendacionList )
				a.Add( new dbMantenimientoBiz.recomendacion(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new rol.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new rol object</returns>
		public dbMantenimientoBiz.rol Newrol(System.Int32 id,
			System.String nombre,
			System.Data.SqlTypes.SqlBoolean estado)
		{
			System.Data.DataRow dr = DataSet.Tables["rol"].NewRow();
			DataSet.Tables["rol"].Rows.Add( dr );
			dbMantenimientoBiz.rol _rol = new dbMantenimientoBiz.rol(this, dr);
			
			_rol.id = id;
			_rol.nombre = nombre;
			_rol.estado = estado;
						
			return _rol;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.rol based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A rol, or null if not found</returns>
		public dbMantenimientoBiz.rol  Getrol(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("rol", relations), ds, false);

			System.Data.DataRow rolRow = GetRow(ds, "rol");

			if ( rolRow == null ) return null;
			return new dbMantenimientoBiz.rol (this,  rolRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.rol from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["rolid"] = _rol.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _rol = dm.GetContactFromDataSet((System.Int32)Session["rolid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A rol, or null if not found</returns>
		public dbMantenimientoBiz.rol GetrolFromDataSet(System.Int32 id)
		{
			System.Data.DataRow rolRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["rol"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					rolRow = dr;
					break;
				}
			}
			
			if ( rolRow == null) return null;
			return new dbMantenimientoBiz.rol (this, rolRow);
		}
		/// <summary>
		/// Gets multiple rols based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of rol objects</returns>
		public dbMantenimientoBiz.rolCollection GetrolCollection()
		{
			return GetrolCollection(FetchPath.rol);
		}
		/// <summary>
		/// Gets multiple rols based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of rol objects</returns>
		public dbMantenimientoBiz.rolCollection GetrolCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("rol", relations), ds, false);
			
			System.Data.DataRow[] rolList = GetRows(ds,"rol");

			if ( rolList == null ) return null;

			dbMantenimientoBiz.rolCollection a = new dbMantenimientoBiz.rolCollection();
			
			foreach ( System.Data.DataRow dr in rolList )
				a.Add(new dbMantenimientoBiz.rol( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of rol from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all rol loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["rolID"] = _rol.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _rol = dm.GetContactFromDataSet((int)Session["rolID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of rol objects.</returns>
		public dbMantenimientoBiz.rolCollection GetrolCollectionFromDataSet()
		{
			System.Data.DataRow[] rolList = GetRows(DataSet, "rol");
			dbMantenimientoBiz.rolCollection a = new dbMantenimientoBiz.rolCollection();
			
			foreach(System.Data.DataRow dr in rolList )
				a.Add( new dbMantenimientoBiz.rol(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new solicitud.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new solicitud object</returns>
		public dbMantenimientoBiz.solicitud Newsolicitud(System.Int32 id,
			System.Data.SqlTypes.SqlInt32 idusuario,
			System.Data.SqlTypes.SqlDateTime fecha,
			System.String observacion,
			System.Data.SqlTypes.SqlBoolean estado,
			System.String tipo,
			System.String idMaquina,
			System.String estado_solicitud)
		{
			System.Data.DataRow dr = DataSet.Tables["solicitud"].NewRow();
			DataSet.Tables["solicitud"].Rows.Add( dr );
			dbMantenimientoBiz.solicitud _solicitud = new dbMantenimientoBiz.solicitud(this, dr);
			
			_solicitud.id = id;
			_solicitud.idusuario = idusuario;
			_solicitud.fecha = fecha;
			_solicitud.observacion = observacion;
			_solicitud.estado = estado;
			_solicitud.tipo = tipo;
			_solicitud.idMaquina = idMaquina;
			_solicitud.estado_solicitud = estado_solicitud;
						
			return _solicitud;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.solicitud based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A solicitud, or null if not found</returns>
		public dbMantenimientoBiz.solicitud  Getsolicitud(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("solicitud", relations), ds, false);

			System.Data.DataRow solicitudRow = GetRow(ds, "solicitud");

			if ( solicitudRow == null ) return null;
			return new dbMantenimientoBiz.solicitud (this,  solicitudRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.solicitud from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["solicitudid"] = _solicitud.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _solicitud = dm.GetContactFromDataSet((System.Int32)Session["solicitudid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A solicitud, or null if not found</returns>
		public dbMantenimientoBiz.solicitud GetsolicitudFromDataSet(System.Int32 id)
		{
			System.Data.DataRow solicitudRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["solicitud"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					solicitudRow = dr;
					break;
				}
			}
			
			if ( solicitudRow == null) return null;
			return new dbMantenimientoBiz.solicitud (this, solicitudRow);
		}
		/// <summary>
		/// Gets multiple solicituds based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of solicitud objects</returns>
		public dbMantenimientoBiz.solicitudCollection GetsolicitudCollection()
		{
			return GetsolicitudCollection(FetchPath.solicitud);
		}
		/// <summary>
		/// Gets multiple solicituds based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of solicitud objects</returns>
		public dbMantenimientoBiz.solicitudCollection GetsolicitudCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("solicitud", relations), ds, false);
			
			System.Data.DataRow[] solicitudList = GetRows(ds,"solicitud");

			if ( solicitudList == null ) return null;

			dbMantenimientoBiz.solicitudCollection a = new dbMantenimientoBiz.solicitudCollection();
			
			foreach ( System.Data.DataRow dr in solicitudList )
				a.Add(new dbMantenimientoBiz.solicitud( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of solicitud from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all solicitud loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["solicitudID"] = _solicitud.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _solicitud = dm.GetContactFromDataSet((int)Session["solicitudID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of solicitud objects.</returns>
		public dbMantenimientoBiz.solicitudCollection GetsolicitudCollectionFromDataSet()
		{
			System.Data.DataRow[] solicitudList = GetRows(DataSet, "solicitud");
			dbMantenimientoBiz.solicitudCollection a = new dbMantenimientoBiz.solicitudCollection();
			
			foreach(System.Data.DataRow dr in solicitudList )
				a.Add( new dbMantenimientoBiz.solicitud(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new sysdiagrams.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new sysdiagrams object</returns>
		public dbMantenimientoBiz.sysdiagrams Newsysdiagrams(System.String name,
			System.Data.SqlTypes.SqlInt32 principal_id,
			System.Int32 diagram_id)
		{
			System.Data.DataRow dr = DataSet.Tables["sysdiagrams"].NewRow();
			DataSet.Tables["sysdiagrams"].Rows.Add( dr );
			dbMantenimientoBiz.sysdiagrams _sysdiagrams = new dbMantenimientoBiz.sysdiagrams(this, dr);
			
			_sysdiagrams.name = name;
			_sysdiagrams.principal_id = principal_id;
			_sysdiagrams.diagram_id = diagram_id;
						
			return _sysdiagrams;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.sysdiagrams based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A sysdiagrams, or null if not found</returns>
		public dbMantenimientoBiz.sysdiagrams  Getsysdiagrams(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("sysdiagrams", relations), ds, false);

			System.Data.DataRow sysdiagramsRow = GetRow(ds, "sysdiagrams");

			if ( sysdiagramsRow == null ) return null;
			return new dbMantenimientoBiz.sysdiagrams (this,  sysdiagramsRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.sysdiagrams from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["sysdiagramsdiagram_id"] = _sysdiagrams.diagram_id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _sysdiagrams = dm.GetContactFromDataSet((System.Int32)Session["sysdiagramsdiagram_id"]);
		/// </code>
		/// </example>
		/// <param name="diagram_id">Primary key of the data row to retrieve.</param>
		/// <returns>A sysdiagrams, or null if not found</returns>
		public dbMantenimientoBiz.sysdiagrams GetsysdiagramsFromDataSet(System.Int32 diagram_id)
		{
			System.Data.DataRow sysdiagramsRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["sysdiagrams"].Rows)
			{
				if ( ((System.Int32)dr["diagram_id"]).ToString() == diagram_id.ToString() ) 
				{
					sysdiagramsRow = dr;
					break;
				}
			}
			
			if ( sysdiagramsRow == null) return null;
			return new dbMantenimientoBiz.sysdiagrams (this, sysdiagramsRow);
		}
		/// <summary>
		/// Gets multiple sysdiagramss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of sysdiagrams objects</returns>
		public dbMantenimientoBiz.sysdiagramsCollection GetsysdiagramsCollection()
		{
			return GetsysdiagramsCollection(FetchPath.sysdiagrams);
		}
		/// <summary>
		/// Gets multiple sysdiagramss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of sysdiagrams objects</returns>
		public dbMantenimientoBiz.sysdiagramsCollection GetsysdiagramsCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("sysdiagrams", relations), ds, false);
			
			System.Data.DataRow[] sysdiagramsList = GetRows(ds,"sysdiagrams");

			if ( sysdiagramsList == null ) return null;

			dbMantenimientoBiz.sysdiagramsCollection a = new dbMantenimientoBiz.sysdiagramsCollection();
			
			foreach ( System.Data.DataRow dr in sysdiagramsList )
				a.Add(new dbMantenimientoBiz.sysdiagrams( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of sysdiagrams from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all sysdiagrams loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["sysdiagramsID"] = _sysdiagrams.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _sysdiagrams = dm.GetContactFromDataSet((int)Session["sysdiagramsID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of sysdiagrams objects.</returns>
		public dbMantenimientoBiz.sysdiagramsCollection GetsysdiagramsCollectionFromDataSet()
		{
			System.Data.DataRow[] sysdiagramsList = GetRows(DataSet, "sysdiagrams");
			dbMantenimientoBiz.sysdiagramsCollection a = new dbMantenimientoBiz.sysdiagramsCollection();
			
			foreach(System.Data.DataRow dr in sysdiagramsList )
				a.Add( new dbMantenimientoBiz.sysdiagrams(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new Usuario.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new Usuario object</returns>
		public dbMantenimientoBiz.Usuario NewUsuario(System.Int32 id,
			System.String usuario,
			System.String password,
			System.Data.SqlTypes.SqlInt32 idrol,
			System.Data.SqlTypes.SqlBoolean estado,
			dbMantenimientoBiz.rol parentrol)
		{
			System.Data.DataRow dr = DataSet.Tables["Usuario"].NewRow();
			DataSet.Tables["Usuario"].Rows.Add( dr );
			dbMantenimientoBiz.Usuario _Usuario = new dbMantenimientoBiz.Usuario(this, dr);
			
			_Usuario.id = id;
			_Usuario.usuario = usuario;
			_Usuario.password = password;
			_Usuario.idrol = idrol;
			_Usuario.estado = estado;
			_Usuario.rol = parentrol;
						
			return _Usuario;
		}

		/// <summary>
		/// Gets a dbMantenimientoBiz.Usuario based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A Usuario, or null if not found</returns>
		public dbMantenimientoBiz.Usuario  GetUsuario(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("Usuario", relations), ds, false);

			System.Data.DataRow UsuarioRow = GetRow(ds, "Usuario");

			if ( UsuarioRow == null ) return null;
			return new dbMantenimientoBiz.Usuario (this,  UsuarioRow);
		}		
		
		/// <summary>
		/// Gets a dbMantenimientoBiz.Usuario from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["Usuarioid"] = _Usuario.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Usuario = dm.GetContactFromDataSet((System.Int32)Session["Usuarioid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A Usuario, or null if not found</returns>
		public dbMantenimientoBiz.Usuario GetUsuarioFromDataSet(System.Int32 id)
		{
			System.Data.DataRow UsuarioRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["Usuario"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					UsuarioRow = dr;
					break;
				}
			}
			
			if ( UsuarioRow == null) return null;
			return new dbMantenimientoBiz.Usuario (this, UsuarioRow);
		}
		/// <summary>
		/// Gets multiple Usuarios based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of Usuario objects</returns>
		public dbMantenimientoBiz.UsuarioCollection GetUsuarioCollection()
		{
			return GetUsuarioCollection(FetchPath.Usuario);
		}
		/// <summary>
		/// Gets multiple Usuarios based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of Usuario objects</returns>
		public dbMantenimientoBiz.UsuarioCollection GetUsuarioCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("Usuario", relations), ds, false);
			
			System.Data.DataRow[] UsuarioList = GetRows(ds,"Usuario");

			if ( UsuarioList == null ) return null;

			dbMantenimientoBiz.UsuarioCollection a = new dbMantenimientoBiz.UsuarioCollection();
			
			foreach ( System.Data.DataRow dr in UsuarioList )
				a.Add(new dbMantenimientoBiz.Usuario( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of Usuario from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all Usuario loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["UsuarioID"] = _Usuario.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Usuario = dm.GetContactFromDataSet((int)Session["UsuarioID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of Usuario objects.</returns>
		public dbMantenimientoBiz.UsuarioCollection GetUsuarioCollectionFromDataSet()
		{
			System.Data.DataRow[] UsuarioList = GetRows(DataSet, "Usuario");
			dbMantenimientoBiz.UsuarioCollection a = new dbMantenimientoBiz.UsuarioCollection();
			
			foreach(System.Data.DataRow dr in UsuarioList )
				a.Add( new dbMantenimientoBiz.Usuario(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}


	}
}
