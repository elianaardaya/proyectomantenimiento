//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using OrmLib;

namespace dbMantenimientoBiz
{
	/// <summary>
	/// Specify the tables that need to be fetched.
	/// </summary>
	/// <remarks>
	/// This is a custom class type that should be used as an extended enumerator.
	/// It is designed as a tree of enumerators.
	/// It is to be used to map out the path to take through relationships to 
	/// retrieve related tables.
	/// </remarks>
	public class FetchPath
	{
		private FetchPath(){}
		
		/// <summary>
		/// Start the fetch from aprobacion 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.aprobacionRelation aprobacion{ get { return new FetchPath._.aprobacionRelation(new ArrayList(), "aprobacion"); } } 
		/// <summary>
		/// Start the fetch from componente 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.componenteRelation componente{ get { return new FetchPath._.componenteRelation(new ArrayList(), "componente"); } } 
		/// <summary>
		/// Start the fetch from detalle_reparo 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.detalle_reparoRelation detalle_reparo{ get { return new FetchPath._.detalle_reparoRelation(new ArrayList(), "detalle_reparo"); } } 
		/// <summary>
		/// Start the fetch from detalleComponente 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.detalleComponenteRelation detalleComponente{ get { return new FetchPath._.detalleComponenteRelation(new ArrayList(), "detalleComponente"); } } 
		/// <summary>
		/// Start the fetch from empresa 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.empresaRelation empresa{ get { return new FetchPath._.empresaRelation(new ArrayList(), "empresa"); } } 
		/// <summary>
		/// Start the fetch from funcion 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.funcionRelation funcion{ get { return new FetchPath._.funcionRelation(new ArrayList(), "funcion"); } } 
		/// <summary>
		/// Start the fetch from inventario 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.inventarioRelation inventario{ get { return new FetchPath._.inventarioRelation(new ArrayList(), "inventario"); } } 
		/// <summary>
		/// Start the fetch from linea_produccion 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.linea_produccionRelation linea_produccion{ get { return new FetchPath._.linea_produccionRelation(new ArrayList(), "linea_produccion"); } } 
		/// <summary>
		/// Start the fetch from maquina 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.maquinaRelation maquina{ get { return new FetchPath._.maquinaRelation(new ArrayList(), "maquina"); } } 
		/// <summary>
		/// Start the fetch from material_herramienta 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.material_herramientaRelation material_herramienta{ get { return new FetchPath._.material_herramientaRelation(new ArrayList(), "material_herramienta"); } } 
		/// <summary>
		/// Start the fetch from materialusado 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.materialusadoRelation materialusado{ get { return new FetchPath._.materialusadoRelation(new ArrayList(), "materialusado"); } } 
		/// <summary>
		/// Start the fetch from privilegio 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.privilegioRelation privilegio{ get { return new FetchPath._.privilegioRelation(new ArrayList(), "privilegio"); } } 
		/// <summary>
		/// Start the fetch from problema 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.problemaRelation problema{ get { return new FetchPath._.problemaRelation(new ArrayList(), "problema"); } } 
		/// <summary>
		/// Start the fetch from proveedor 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.proveedorRelation proveedor{ get { return new FetchPath._.proveedorRelation(new ArrayList(), "proveedor"); } } 
		/// <summary>
		/// Start the fetch from recomendacion 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.recomendacionRelation recomendacion{ get { return new FetchPath._.recomendacionRelation(new ArrayList(), "recomendacion"); } } 
		/// <summary>
		/// Start the fetch from rol 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.rolRelation rol{ get { return new FetchPath._.rolRelation(new ArrayList(), "rol"); } } 
		/// <summary>
		/// Start the fetch from solicitud 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.solicitudRelation solicitud{ get { return new FetchPath._.solicitudRelation(new ArrayList(), "solicitud"); } } 
		/// <summary>
		/// Start the fetch from sysdiagrams 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.sysdiagramsRelation sysdiagrams{ get { return new FetchPath._.sysdiagramsRelation(new ArrayList(), "sysdiagrams"); } } 
		/// <summary>
		/// Start the fetch from Usuario 
		/// </summary>
		/// <remarks>
		/// The FetchPath must start at the root table being fetched.
		/// i.e the DataManager.Get&lt;TableName1&gt;() and The FetchPath.&lt;TableName1&gt;.&lt;more tables&gt;.... should match
		/// </remarks>
		public static FetchPath._.UsuarioRelation Usuario{ get { return new FetchPath._.UsuarioRelation(new ArrayList(), "Usuario"); } } 

		/// <summary>
		/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
		/// </summary>
		[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
		public class _
		{
			private _(){}


			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class aprobacionRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal aprobacionRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public aprobacionRelation All
				{
					get
					{
						
						
						RelationList.Add(new DataManagerBase.Relation("solicitud","id","aprobacion","idMantenimiento", this.OrmAlias, this.OrmAlias + "_soli7", true));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","aprobacion","idusuario", this.OrmAlias, this.OrmAlias + "_Usua18", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public aprobacionRelation AllChildren
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public aprobacionRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("solicitud","id","aprobacion","idMantenimiento", this.OrmAlias, this.OrmAlias + "_soli7", true));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","aprobacion","idusuario", this.OrmAlias, this.OrmAlias + "_Usua18", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.solicitudRelation solicitud
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("solicitud","id","aprobacion","idMantenimiento", this.OrmAlias, this.OrmAlias + "_soli7", true ));
						return new FetchPath._.solicitudRelation(RelationList, this.OrmAlias + "_soli7"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.UsuarioRelation Usuario
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","aprobacion","idusuario", this.OrmAlias, this.OrmAlias + "_Usua18", true ));
						return new FetchPath._.UsuarioRelation(RelationList, this.OrmAlias + "_Usua18"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class componenteRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal componenteRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public componenteRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("componente","id","detalleComponente","id_componente", this.OrmAlias, this.OrmAlias + "_deta1", false));
						
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","componente","idproveedor", this.OrmAlias, this.OrmAlias + "_prov14", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public componenteRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("componente","id","detalleComponente","id_componente", this.OrmAlias, this.OrmAlias + "_deta1", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public componenteRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","componente","idproveedor", this.OrmAlias, this.OrmAlias + "_prov14", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.detalleComponenteRelation detalleComponente
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("componente","id","detalleComponente","id_componente", this.OrmAlias, this.OrmAlias + "_deta1", false ));
						return new FetchPath._.detalleComponenteRelation(RelationList, this.OrmAlias + "_deta1"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.proveedorRelation proveedor
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","componente","idproveedor", this.OrmAlias, this.OrmAlias + "_prov14", true ));
						return new FetchPath._.proveedorRelation(RelationList, this.OrmAlias + "_prov14"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class detalle_reparoRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal detalle_reparoRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public detalle_reparoRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","detalleComponente","id_reparo", this.OrmAlias, this.OrmAlias + "_deta2", false));
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","materialusado","id_reparo", this.OrmAlias, this.OrmAlias + "_mate3", false));
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","detalle_reparo","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu8", true));
						RelationList.Add(new DataManagerBase.Relation("problema","id","detalle_reparo","idproblema", this.OrmAlias, this.OrmAlias + "_prob13", true));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","detalle_reparo","idusuario", this.OrmAlias, this.OrmAlias + "_Usua19", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public detalle_reparoRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","detalleComponente","id_reparo", this.OrmAlias, this.OrmAlias + "_deta2", false));
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","materialusado","id_reparo", this.OrmAlias, this.OrmAlias + "_mate3", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public detalle_reparoRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","detalle_reparo","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu8", true));
						RelationList.Add(new DataManagerBase.Relation("problema","id","detalle_reparo","idproblema", this.OrmAlias, this.OrmAlias + "_prob13", true));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","detalle_reparo","idusuario", this.OrmAlias, this.OrmAlias + "_Usua19", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.detalleComponenteRelation detalleComponente
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","detalleComponente","id_reparo", this.OrmAlias, this.OrmAlias + "_deta2", false ));
						return new FetchPath._.detalleComponenteRelation(RelationList, this.OrmAlias + "_deta2"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.materialusadoRelation materialusado
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","materialusado","id_reparo", this.OrmAlias, this.OrmAlias + "_mate3", false ));
						return new FetchPath._.materialusadoRelation(RelationList, this.OrmAlias + "_mate3"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.maquinaRelation maquina
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","detalle_reparo","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu8", true ));
						return new FetchPath._.maquinaRelation(RelationList, this.OrmAlias + "_maqu8"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.problemaRelation problema
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("problema","id","detalle_reparo","idproblema", this.OrmAlias, this.OrmAlias + "_prob13", true ));
						return new FetchPath._.problemaRelation(RelationList, this.OrmAlias + "_prob13"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.UsuarioRelation Usuario
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","detalle_reparo","idusuario", this.OrmAlias, this.OrmAlias + "_Usua19", true ));
						return new FetchPath._.UsuarioRelation(RelationList, this.OrmAlias + "_Usua19"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class detalleComponenteRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal detalleComponenteRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public detalleComponenteRelation All
				{
					get
					{
						
						
						RelationList.Add(new DataManagerBase.Relation("componente","id","detalleComponente","id_componente", this.OrmAlias, this.OrmAlias + "_comp1", true));
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","detalleComponente","id_reparo", this.OrmAlias, this.OrmAlias + "_deta2", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public detalleComponenteRelation AllChildren
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public detalleComponenteRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("componente","id","detalleComponente","id_componente", this.OrmAlias, this.OrmAlias + "_comp1", true));
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","detalleComponente","id_reparo", this.OrmAlias, this.OrmAlias + "_deta2", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.componenteRelation componente
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("componente","id","detalleComponente","id_componente", this.OrmAlias, this.OrmAlias + "_comp1", true ));
						return new FetchPath._.componenteRelation(RelationList, this.OrmAlias + "_comp1"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.detalle_reparoRelation detalle_reparo
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","detalleComponente","id_reparo", this.OrmAlias, this.OrmAlias + "_deta2", true ));
						return new FetchPath._.detalle_reparoRelation(RelationList, this.OrmAlias + "_deta2"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class empresaRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal empresaRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public empresaRelation All
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public empresaRelation AllChildren
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public empresaRelation AllParents
				{
					get
					{
						
						
						return this;
					}
				} 
				


			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class funcionRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal funcionRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public funcionRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("funcion","id","privilegio","idfuncion", this.OrmAlias, this.OrmAlias + "_priv4", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public funcionRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("funcion","id","privilegio","idfuncion", this.OrmAlias, this.OrmAlias + "_priv4", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public funcionRelation AllParents
				{
					get
					{
						
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.privilegioRelation privilegio
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("funcion","id","privilegio","idfuncion", this.OrmAlias, this.OrmAlias + "_priv4", false ));
						return new FetchPath._.privilegioRelation(RelationList, this.OrmAlias + "_priv4"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class inventarioRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal inventarioRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public inventarioRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("inventario","id","materialusado","idmaterial", this.OrmAlias, this.OrmAlias + "_mate5", false));
						
						RelationList.Add(new DataManagerBase.Relation("material_herramienta","id","inventario","idmaterial", this.OrmAlias, this.OrmAlias + "_mate12", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public inventarioRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("inventario","id","materialusado","idmaterial", this.OrmAlias, this.OrmAlias + "_mate5", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public inventarioRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("material_herramienta","id","inventario","idmaterial", this.OrmAlias, this.OrmAlias + "_mate12", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.materialusadoRelation materialusado
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("inventario","id","materialusado","idmaterial", this.OrmAlias, this.OrmAlias + "_mate5", false ));
						return new FetchPath._.materialusadoRelation(RelationList, this.OrmAlias + "_mate5"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.material_herramientaRelation material_herramienta
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("material_herramienta","id","inventario","idmaterial", this.OrmAlias, this.OrmAlias + "_mate12", true ));
						return new FetchPath._.material_herramientaRelation(RelationList, this.OrmAlias + "_mate12"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class linea_produccionRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal linea_produccionRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public linea_produccionRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("linea_produccion","id","maquina","idlinea", this.OrmAlias, this.OrmAlias + "_maqu6", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public linea_produccionRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("linea_produccion","id","maquina","idlinea", this.OrmAlias, this.OrmAlias + "_maqu6", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public linea_produccionRelation AllParents
				{
					get
					{
						
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.maquinaRelation maquina
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("linea_produccion","id","maquina","idlinea", this.OrmAlias, this.OrmAlias + "_maqu6", false ));
						return new FetchPath._.maquinaRelation(RelationList, this.OrmAlias + "_maqu6"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class maquinaRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal maquinaRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public maquinaRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","detalle_reparo","idmaquina", this.OrmAlias, this.OrmAlias + "_deta8", false));
						RelationList.Add(new DataManagerBase.Relation("maquina","id","problema","idmaquina", this.OrmAlias, this.OrmAlias + "_prob9", false));
						RelationList.Add(new DataManagerBase.Relation("maquina","id","recomendacion","idmaquina", this.OrmAlias, this.OrmAlias + "_reco10", false));
						RelationList.Add(new DataManagerBase.Relation("maquina","id","solicitud","idMaquina", this.OrmAlias, this.OrmAlias + "_soli11", false));
						
						RelationList.Add(new DataManagerBase.Relation("linea_produccion","id","maquina","idlinea", this.OrmAlias, this.OrmAlias + "_line6", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public maquinaRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","detalle_reparo","idmaquina", this.OrmAlias, this.OrmAlias + "_deta8", false));
						RelationList.Add(new DataManagerBase.Relation("maquina","id","problema","idmaquina", this.OrmAlias, this.OrmAlias + "_prob9", false));
						RelationList.Add(new DataManagerBase.Relation("maquina","id","recomendacion","idmaquina", this.OrmAlias, this.OrmAlias + "_reco10", false));
						RelationList.Add(new DataManagerBase.Relation("maquina","id","solicitud","idMaquina", this.OrmAlias, this.OrmAlias + "_soli11", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public maquinaRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("linea_produccion","id","maquina","idlinea", this.OrmAlias, this.OrmAlias + "_line6", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.detalle_reparoRelation detalle_reparo
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","detalle_reparo","idmaquina", this.OrmAlias, this.OrmAlias + "_deta8", false ));
						return new FetchPath._.detalle_reparoRelation(RelationList, this.OrmAlias + "_deta8"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.problemaRelation problema
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","problema","idmaquina", this.OrmAlias, this.OrmAlias + "_prob9", false ));
						return new FetchPath._.problemaRelation(RelationList, this.OrmAlias + "_prob9"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.recomendacionRelation recomendacion
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","recomendacion","idmaquina", this.OrmAlias, this.OrmAlias + "_reco10", false ));
						return new FetchPath._.recomendacionRelation(RelationList, this.OrmAlias + "_reco10"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.solicitudRelation solicitud
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","solicitud","idMaquina", this.OrmAlias, this.OrmAlias + "_soli11", false ));
						return new FetchPath._.solicitudRelation(RelationList, this.OrmAlias + "_soli11"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.linea_produccionRelation linea_produccion
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("linea_produccion","id","maquina","idlinea", this.OrmAlias, this.OrmAlias + "_line6", true ));
						return new FetchPath._.linea_produccionRelation(RelationList, this.OrmAlias + "_line6"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class material_herramientaRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal material_herramientaRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public material_herramientaRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("material_herramienta","id","inventario","idmaterial", this.OrmAlias, this.OrmAlias + "_inve12", false));
						
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","material_herramienta","idproveedor", this.OrmAlias, this.OrmAlias + "_prov15", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public material_herramientaRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("material_herramienta","id","inventario","idmaterial", this.OrmAlias, this.OrmAlias + "_inve12", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public material_herramientaRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","material_herramienta","idproveedor", this.OrmAlias, this.OrmAlias + "_prov15", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.inventarioRelation inventario
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("material_herramienta","id","inventario","idmaterial", this.OrmAlias, this.OrmAlias + "_inve12", false ));
						return new FetchPath._.inventarioRelation(RelationList, this.OrmAlias + "_inve12"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.proveedorRelation proveedor
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","material_herramienta","idproveedor", this.OrmAlias, this.OrmAlias + "_prov15", true ));
						return new FetchPath._.proveedorRelation(RelationList, this.OrmAlias + "_prov15"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class materialusadoRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal materialusadoRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public materialusadoRelation All
				{
					get
					{
						
						
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","materialusado","id_reparo", this.OrmAlias, this.OrmAlias + "_deta3", true));
						RelationList.Add(new DataManagerBase.Relation("inventario","id","materialusado","idmaterial", this.OrmAlias, this.OrmAlias + "_inve5", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public materialusadoRelation AllChildren
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public materialusadoRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","materialusado","id_reparo", this.OrmAlias, this.OrmAlias + "_deta3", true));
						RelationList.Add(new DataManagerBase.Relation("inventario","id","materialusado","idmaterial", this.OrmAlias, this.OrmAlias + "_inve5", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.detalle_reparoRelation detalle_reparo
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("detalle_reparo","id","materialusado","id_reparo", this.OrmAlias, this.OrmAlias + "_deta3", true ));
						return new FetchPath._.detalle_reparoRelation(RelationList, this.OrmAlias + "_deta3"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.inventarioRelation inventario
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("inventario","id","materialusado","idmaterial", this.OrmAlias, this.OrmAlias + "_inve5", true ));
						return new FetchPath._.inventarioRelation(RelationList, this.OrmAlias + "_inve5"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class privilegioRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal privilegioRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public privilegioRelation All
				{
					get
					{
						
						
						RelationList.Add(new DataManagerBase.Relation("funcion","id","privilegio","idfuncion", this.OrmAlias, this.OrmAlias + "_func4", true));
						RelationList.Add(new DataManagerBase.Relation("rol","id","privilegio","idrol", this.OrmAlias, this.OrmAlias + "_rol17", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public privilegioRelation AllChildren
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public privilegioRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("funcion","id","privilegio","idfuncion", this.OrmAlias, this.OrmAlias + "_func4", true));
						RelationList.Add(new DataManagerBase.Relation("rol","id","privilegio","idrol", this.OrmAlias, this.OrmAlias + "_rol17", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.funcionRelation funcion
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("funcion","id","privilegio","idfuncion", this.OrmAlias, this.OrmAlias + "_func4", true ));
						return new FetchPath._.funcionRelation(RelationList, this.OrmAlias + "_func4"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.rolRelation rol
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("rol","id","privilegio","idrol", this.OrmAlias, this.OrmAlias + "_rol17", true ));
						return new FetchPath._.rolRelation(RelationList, this.OrmAlias + "_rol17"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class problemaRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal problemaRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public problemaRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("problema","id","detalle_reparo","idproblema", this.OrmAlias, this.OrmAlias + "_deta13", false));
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","problema","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu9", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public problemaRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("problema","id","detalle_reparo","idproblema", this.OrmAlias, this.OrmAlias + "_deta13", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public problemaRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","problema","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu9", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.detalle_reparoRelation detalle_reparo
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("problema","id","detalle_reparo","idproblema", this.OrmAlias, this.OrmAlias + "_deta13", false ));
						return new FetchPath._.detalle_reparoRelation(RelationList, this.OrmAlias + "_deta13"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.maquinaRelation maquina
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","problema","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu9", true ));
						return new FetchPath._.maquinaRelation(RelationList, this.OrmAlias + "_maqu9"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class proveedorRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal proveedorRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public proveedorRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","componente","idproveedor", this.OrmAlias, this.OrmAlias + "_comp14", false));
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","material_herramienta","idproveedor", this.OrmAlias, this.OrmAlias + "_mate15", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public proveedorRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","componente","idproveedor", this.OrmAlias, this.OrmAlias + "_comp14", false));
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","material_herramienta","idproveedor", this.OrmAlias, this.OrmAlias + "_mate15", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public proveedorRelation AllParents
				{
					get
					{
						
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.componenteRelation componente
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","componente","idproveedor", this.OrmAlias, this.OrmAlias + "_comp14", false ));
						return new FetchPath._.componenteRelation(RelationList, this.OrmAlias + "_comp14"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.material_herramientaRelation material_herramienta
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("proveedor","id","material_herramienta","idproveedor", this.OrmAlias, this.OrmAlias + "_mate15", false ));
						return new FetchPath._.material_herramientaRelation(RelationList, this.OrmAlias + "_mate15"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class recomendacionRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal recomendacionRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public recomendacionRelation All
				{
					get
					{
						
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","recomendacion","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu10", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public recomendacionRelation AllChildren
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public recomendacionRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","recomendacion","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu10", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.maquinaRelation maquina
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","recomendacion","idmaquina", this.OrmAlias, this.OrmAlias + "_maqu10", true ));
						return new FetchPath._.maquinaRelation(RelationList, this.OrmAlias + "_maqu10"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class rolRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal rolRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public rolRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("rol","id","Usuario","idrol", this.OrmAlias, this.OrmAlias + "_Usua16", false));
						RelationList.Add(new DataManagerBase.Relation("rol","id","privilegio","idrol", this.OrmAlias, this.OrmAlias + "_priv17", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public rolRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("rol","id","Usuario","idrol", this.OrmAlias, this.OrmAlias + "_Usua16", false));
						RelationList.Add(new DataManagerBase.Relation("rol","id","privilegio","idrol", this.OrmAlias, this.OrmAlias + "_priv17", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public rolRelation AllParents
				{
					get
					{
						
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.UsuarioRelation Usuario
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("rol","id","Usuario","idrol", this.OrmAlias, this.OrmAlias + "_Usua16", false ));
						return new FetchPath._.UsuarioRelation(RelationList, this.OrmAlias + "_Usua16"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.privilegioRelation privilegio
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("rol","id","privilegio","idrol", this.OrmAlias, this.OrmAlias + "_priv17", false ));
						return new FetchPath._.privilegioRelation(RelationList, this.OrmAlias + "_priv17"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class solicitudRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal solicitudRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public solicitudRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("solicitud","id","aprobacion","idMantenimiento", this.OrmAlias, this.OrmAlias + "_apro7", false));
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","solicitud","idMaquina", this.OrmAlias, this.OrmAlias + "_maqu11", true));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","solicitud","idusuario", this.OrmAlias, this.OrmAlias + "_Usua20", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public solicitudRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("solicitud","id","aprobacion","idMantenimiento", this.OrmAlias, this.OrmAlias + "_apro7", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public solicitudRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("maquina","id","solicitud","idMaquina", this.OrmAlias, this.OrmAlias + "_maqu11", true));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","solicitud","idusuario", this.OrmAlias, this.OrmAlias + "_Usua20", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.aprobacionRelation aprobacion
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("solicitud","id","aprobacion","idMantenimiento", this.OrmAlias, this.OrmAlias + "_apro7", false ));
						return new FetchPath._.aprobacionRelation(RelationList, this.OrmAlias + "_apro7"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.maquinaRelation maquina
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("maquina","id","solicitud","idMaquina", this.OrmAlias, this.OrmAlias + "_maqu11", true ));
						return new FetchPath._.maquinaRelation(RelationList, this.OrmAlias + "_maqu11"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.UsuarioRelation Usuario
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","solicitud","idusuario", this.OrmAlias, this.OrmAlias + "_Usua20", true ));
						return new FetchPath._.UsuarioRelation(RelationList, this.OrmAlias + "_Usua20"); 
					}
				}

				

			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class sysdiagramsRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal sysdiagramsRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public sysdiagramsRelation All
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public sysdiagramsRelation AllChildren
				{
					get
					{
						
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public sysdiagramsRelation AllParents
				{
					get
					{
						
						
						return this;
					}
				} 
				


			}
			
			/// <summary>
			/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
			/// </summary>
			public class UsuarioRelation : DataManagerBase.FetchPathRelation
			{			
				/// <summary>
				/// Internal class - do not instantiate directly. See <see cref="FetchPath"/>.
				/// </summary>
				internal UsuarioRelation(ArrayList relationList, string alias) { this.RelationList = relationList; this.OrmAlias = alias;}
			
				
				/// <summary>
				/// Fetch all related children and parents
				/// </summary>
				public UsuarioRelation All
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","aprobacion","idusuario", this.OrmAlias, this.OrmAlias + "_apro18", false));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","detalle_reparo","idusuario", this.OrmAlias, this.OrmAlias + "_deta19", false));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","solicitud","idusuario", this.OrmAlias, this.OrmAlias + "_soli20", false));
						
						RelationList.Add(new DataManagerBase.Relation("rol","id","Usuario","idrol", this.OrmAlias, this.OrmAlias + "_rol16", true));
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related children
				/// </summary>
				public UsuarioRelation AllChildren
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","aprobacion","idusuario", this.OrmAlias, this.OrmAlias + "_apro18", false));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","detalle_reparo","idusuario", this.OrmAlias, this.OrmAlias + "_deta19", false));
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","solicitud","idusuario", this.OrmAlias, this.OrmAlias + "_soli20", false));
						
						return this;
					}
				} 
			
				/// <summary>
				/// Fetch all related parents
				/// </summary>
				public UsuarioRelation AllParents
				{
					get
					{
						
						RelationList.Add(new DataManagerBase.Relation("rol","id","Usuario","idrol", this.OrmAlias, this.OrmAlias + "_rol16", true));
						
						return this;
					}
				} 
				

				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.aprobacionRelation aprobacion
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","aprobacion","idusuario", this.OrmAlias, this.OrmAlias + "_apro18", false ));
						return new FetchPath._.aprobacionRelation(RelationList, this.OrmAlias + "_apro18"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.detalle_reparoRelation detalle_reparo
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","detalle_reparo","idusuario", this.OrmAlias, this.OrmAlias + "_deta19", false ));
						return new FetchPath._.detalle_reparoRelation(RelationList, this.OrmAlias + "_deta19"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.solicitudRelation solicitud
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("Usuario","id","solicitud","idusuario", this.OrmAlias, this.OrmAlias + "_soli20", false ));
						return new FetchPath._.solicitudRelation(RelationList, this.OrmAlias + "_soli20"); 
					}
				}

				
				/// <summary>
				/// Include this table through this relation.
				/// </summary>
				public FetchPath._.rolRelation rol
				{
					get
					{
						RelationList.Add(new DataManagerBase.Relation("rol","id","Usuario","idrol", this.OrmAlias, this.OrmAlias + "_rol16", true ));
						return new FetchPath._.rolRelation(RelationList, this.OrmAlias + "_rol16"); 
					}
				}

				

			}
			

		}
	}
}
		

